{"version":3,"file":"component---node-modules-gatsby-theme-blog-core-src-templates-posts-query-js-bc67f3b70ded204bb4af.js","mappings":"wPAkCA,EA/Be,SAAC,GAAD,IAAGA,EAAH,EAAGA,YAAH,OACb,kBACEC,KAAKA,EAAAA,EAAAA,IAAI,CACPC,GAAI,EACJC,GAAI,KAHR,MAMK,IAAIC,MAAOC,cANhB,oBAQE,QAAC,OAAD,CAAUC,KAAK,4BAAf,UARF,YAUGN,EACGA,EAAYO,KAAI,SAACC,EAAUC,EAAGC,GAAd,OACd,QAAC,EAAAC,SAAD,CAAUC,IAAKJ,EAASK,MACtB,QAAC,OAAD,CACEP,KAAME,EAASK,IACfC,OAAO,SACPC,IAAI,uBAEHP,EAASQ,MAEXN,EAAIO,OAAS,IAAMR,IAClB,QAAC,EAAAE,SAAD,kBAVU,IAgBhB,KA5BO,E,8BC2Bf,EA1BiB,SAAC,GAAD,IAAGO,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,QAAtB,OACf,wBACE,uBACE,QAAC,QAAD,CACEC,GAAI,CACFC,GAAI,KAGN,QAAC,OAAD,CACEC,GAAIC,EAAAA,GACJH,GAAI,CACFI,eAAe,QAEjBC,GAAIR,GAEHD,GAASC,KAGd,qBAAQC,KAEV,wBACE,QAAC,OAAD,KAAWC,IArBA,ECOjB,EARiB,SAAC,GAAD,IAAGO,EAAH,EAAGA,MAAH,OACf,wBACGA,EAAMrB,KAAI,SAACsB,GAAD,OACT,QAAC,GAAD,QAAUjB,IAAKiB,EAAKV,MAAUU,GADrB,IAFE,ECajB,EAVc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUF,EAAb,EAAaA,MAAOG,EAApB,EAAoBA,UAAW/B,EAA/B,EAA+BA,YAA/B,OACZ,QAAC,IAAD,CAAQ8B,SAAUA,EAAUZ,MAAOa,IACjC,QAAC,IAAD,CAAKb,MAAM,UACX,qBACE,QAAC,EAAD,CAAUU,MAAOA,MAEnB,QAAC,EAAD,CAAQ5B,YAAaA,IANX,ECHd,ECAqB,SAAC,GAAwB,IAAtB8B,EAAqB,EAArBA,SAAUE,EAAW,EAAXA,KACxBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YACd,OACE,QAAC,EAAD,CACEJ,SAAUA,EACVF,MAAOM,EAAYC,MACnBJ,UAAWE,EAAKG,aAAalB,MAC7BlB,YAAaiC,EAAKG,aAAaC,QAGpC,C","sources":["webpack://gatsby-starter-blog-theme/./node_modules/gatsby-theme-blog/src/components/home-footer.js","webpack://gatsby-starter-blog-theme/./node_modules/gatsby-theme-blog/src/components/post-link.js","webpack://gatsby-starter-blog-theme/./node_modules/gatsby-theme-blog/src/components/post-list.js","webpack://gatsby-starter-blog-theme/./node_modules/gatsby-theme-blog/src/components/posts.js","webpack://gatsby-starter-blog-theme/./node_modules/gatsby-theme-blog-core/src/templates/posts-query.js","webpack://gatsby-starter-blog-theme/./node_modules/gatsby-theme-blog/src/gatsby-theme-blog-core/components/posts.js"],"sourcesContent":["import React, { Fragment } from \"react\"\nimport { Themed, css } from \"theme-ui\"\n\nconst Footer = ({ socialLinks }) => (\n  <footer\n    css={css({\n      mt: 4,\n      pt: 3,\n    })}\n  >\n    Â© {new Date().getFullYear()}, Powered by\n    {` `}\n    <Themed.a href=\"https://www.gatsbyjs.com\">Gatsby</Themed.a>\n    {` `}&bull;{` `}\n    {socialLinks\n      ? socialLinks.map((platform, i, arr) => (\n          <Fragment key={platform.url}>\n            <Themed.a\n              href={platform.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {platform.name}\n            </Themed.a>\n            {arr.length - 1 !== i && (\n              <Fragment>\n                {` `}&bull;{` `}\n              </Fragment>\n            )}\n          </Fragment>\n        ))\n      : null}\n  </footer>\n)\nexport default Footer\n","/** @jsx jsx */\nimport { Themed, jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ({ title, slug, date, excerpt }) => (\n  <article>\n    <header>\n      <Themed.h2\n        sx={{\n          mb: 1,\n        }}\n      >\n        <Themed.a\n          as={Link}\n          sx={{\n            textDecoration: `none`,\n          }}\n          to={slug}\n        >\n          {title || slug}\n        </Themed.a>\n      </Themed.h2>\n      <small>{date}</small>\n    </header>\n    <section>\n      <Themed.p>{excerpt}</Themed.p>\n    </section>\n  </article>\n)\n\nexport default PostLink\n","import * as React from \"react\"\nimport PostLink from \"./post-link\"\n\nconst PostList = ({ posts }) => (\n  <>\n    {posts.map((node) => (\n      <PostLink key={node.slug} {...node} />\n    ))}\n  </>\n)\n\nexport default PostList\n","import * as React from \"react\"\nimport Layout from \"./layout\"\nimport SEO from \"./seo\"\nimport Footer from \"./home-footer\"\nimport PostList from \"./post-list\"\n\nconst Posts = ({ location, posts, siteTitle, socialLinks }) => (\n  <Layout location={location} title={siteTitle}>\n    <SEO title=\"Home\" />\n    <main>\n      <PostList posts={posts} />\n    </main>\n    <Footer socialLinks={socialLinks} />\n  </Layout>\n)\n\nexport default Posts\n","import { graphql } from \"gatsby\"\nimport PostsPage from \"../components/posts\"\n\nexport default PostsPage\n\nexport const query = graphql`\n  query PostsQuery($limit: Int!, $filter: BlogPostFilterInput) {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    allBlogPost(\n      sort: { fields: [date, title], order: DESC }\n      filter: $filter\n      limit: $limit\n    ) {\n      nodes {\n        id\n        excerpt\n        slug\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Posts from \"../../components/posts\"\n\nconst PostsWrapper = ({ location, data }) => {\n  const { site, allBlogPost } = data\n  return (\n    <Posts\n      location={location}\n      posts={allBlogPost.nodes}\n      siteTitle={site.siteMetadata.title}\n      socialLinks={site.siteMetadata.social}\n    />\n  )\n}\n\nexport default PostsWrapper\n"],"names":["socialLinks","css","mt","pt","Date","getFullYear","href","map","platform","i","arr","Fragment","key","url","target","rel","name","length","title","slug","date","excerpt","sx","mb","as","Link","textDecoration","to","posts","node","location","siteTitle","data","site","allBlogPost","nodes","siteMetadata","social"],"sourceRoot":""}